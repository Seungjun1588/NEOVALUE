MDPoint %>%
group_by(CUST_ID,SHOP_CD) %>%
summarise(n=n()) %>%
spread(SHOP_CD,n) %>%
replace(.,is.na(.),0)
MDPoint %>%
group_by(CUST_ID,SHOP_CD) %>%
summarise(n=n()) %>%
spread(SHOP_CD,n) %>%
replace(.,is.na(.),0) -> tbl
tbl
View(tbl)
tbl %>% colSums()
colSums(tbl)
tbl$0
tbl$"0"
sum(tbl$"0")
tbl %>% colSums(,dims=1)
tbl %>% as.matrix %>% colSums()
tbl %>% as.matrix
tbl %>% as.matrix %>% as.numeric
tbl %>% select(-CUST_ID) %>% colSums()
tbl %>% select(-CUST_ID)
tbl %>% select(-CUST_ID) %>%  as.matrix
tbl %>% select(-"CUST_ID")
tbl %>% select(-`CUST_ID`)
tbl %>% ungroup %>% select(-`CUST_ID`)
MDPoint %>%
group_by(CUST_ID,SHOP_CD) %>%
summarise(n=n()) %>%
spread(SHOP_CD,n) %>%
replace(.,is.na(.),0)  %>% ungruop -> tbl
tbl %>% ungroup %>% select(-`CUST_ID`) %>%  as.matrix
tbl %>% ungroup %>% select(-`CUST_ID`) %>%  as.matrix %>% colSums()
tbl %>% select(-`CUST_ID`) %>%  as.matrix %>% colSums()
MDPoint %>%
group_by(CUST_ID,SHOP_CD) %>%
summarise(n=n()) %>%
spread(SHOP_CD,n) %>%
replace(.,is.na(.),0)  %>% ungroup -> tbl
tbl %>% select(-`CUST_ID`) %>%  as.matrix %>% colSums()
dim(tbl)
fa(tbl %>% select(-`CUST_ID`) %>% as.matrix, nfactors=1, fm="ml")
fa(tbl %>% select(-`CUST_ID`) %>% as.matrix, nfactors=5, fm="ml")
library(psych)
install.packages("psych")
library(psych)
fa(tbl %>% select(-`CUST_ID`) %>% as.matrix, nfactors=5, fm="ml")
fa  = factanal(tbl %>% select(-`CUST_ID`) %>%  as.matrix, 7, rotation = "varimax",scores="regression")
fa
load = mlm$loadings                                                               # estimated factor loadings
mlm  = factanal(tbl %>% select(-`CUST_ID`) %>%  as.matrix, 7, rotation = "varimax",scores="regression")
load = mlm$loadings                                                               # estimated factor loadings
load   = cbind(load[, 1], load[, 2],load[, 3],load[, 4],load[, 5],load[, 6],load[, 7])                                     # the estimated factor loadings matrix
com  = diag(load %*% t(load))                                                       # communalities are calculated
psi  = diag(cor_scaled_data) - diag(load %*% t(load))                               # specific variances are calculated
psi  = diag(cor(tbl %>% select(-`CUST_ID`) %>%  as.matrix)) - diag(load %*% t(load))                               # specific variances are calculated
(tbl  = cbind(load, com, psi))
plot(ucircle, type = "l", lty = "solid", col = "blue", xlab = "q1", ylab = "q2",
main = "Car dataset", cex.lab = 1.2, cex.axis = 1.2, cex.main = 1.6, lwd = 2)
ucircle = cbind(cos((0:360)/180 * pi), sin((0:360)/180 * pi))
plot(ucircle, type = "l", lty = "solid", col = "blue", xlab = "q1", ylab = "q2",
main = "Car dataset", cex.lab = 1.2, cex.axis = 1.2, cex.main = 1.6, lwd = 2)
plot(ucircle, type = "l", lty = "solid", col = "blue", xlab = "q1", ylab = "q2",
main = "SHOP_CD", cex.lab = 1.2, cex.axis = 1.2, cex.main = 1.6, lwd = 2)
abline(h = 0, v = 0)
text(load[, 1], load[, 2], colnames(X), cex = 1.1)
tbl2 %>% select(-`CUST_ID`)
tbl2 = tbl %>% select(-`CUST_ID`)
tbl %>% select(-`CUST_ID`) %>%  as.matrix %>% colSums()
tbl %>% tidyr::select(-`CUST_ID`) %>%  as.matrix %>% colSums()
tbl %>% tidyverse::select(-`CUST_ID`) %>%  as.matrix %>% colSums()
library(tidyverse)
tbl2 = tbl %>% select(-`CUST_ID`)
tbl %>% tidyverse::select(-`CUST_ID`) %>%  as.matrix %>% colSums()
tbl2 = tbl %>% select(-`CUST_ID`)
# install.packages("data.table")
library(data.table)
library(readxl)
library(tidyverse)
tbl %>% tidyverse::select(-`CUST_ID`) %>%  as.matrix %>% colSums()
tbl %>% select(-`CUST_ID`) %>%  as.matrix %>% colSums()
getwd()
# install.packages("data.table")
library(data.table)
library(readxl)
library(tidyverse)
setwd("C:/Seungjun/neovalue/NEOVALUE/230616_네오밸류 데이터(발송용)/네오밸류 데이터/02_운영데이터 등/230531_광교 데이터/후지쯔 매출내역(Open~2210)")
library(readxl)
#------------------------------------------------------------------#
# 포인트적립(CRM.CR_POINT_ADD)
MDPoint = read_excel("멤버십 매출.xlsx",sheet="포인트적립(CRM.CR_POINT_ADD)")
MDPoint = MDPoint[-1,]
dim(MDPoint)
getwd()
year = '2019년'
year
list.files(pwd)
#---------------------------------------------------------------------#
# 매출 데이터 통합
#---------------------------------------------------------------------#
pwd = "C:\Seungjun\neovalue\NEOVALUE\230616_네오밸류 데이터(발송용)\네오밸류 데이터\02_운영데이터 등\230531_광교 데이터\후지쯔 매출내역(Open~2210)\일별\매출건수\2019년"
list.files(pwd)
#---------------------------------------------------------------------#
# 매출 데이터 통합
#---------------------------------------------------------------------#
pwd = "C:/Seungjun/neovalue/NEOVALUE/230616_네오밸류 데이터(발송용)/네오밸류 데이터/02_운영데이터 등/230531_광교 데이터/후지쯔 매출내역(Open~2210)/일별/매출건수"
yaer = "/2019년"
year = "/2019년"
list.files(paste0(pwd,year))
file_lst = list.files(paste0(pwd,year))
file_lst[1]
MDSANL = read_excel(file_lst[1])
MDSANL = read_excel(paste0(pwd,year,file_lst[1]))
paste0(pwd,year,file_lst[1])
MDSANL = read_excel(paste0(pwd,year,"/",file_lst[1]))
year19 = read_excel(paste0(pwd,year,"/",file_lst[1]))
head(year19)
year19 = read_excel(paste0(pwd,year,"/",file_lst[4]))
head(year)
View(year19)
?read_excel
year19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11)
year19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11,range=cell_cols(-1))
year19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11) %>%
slice(-1)
year19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11) %>%
slice(-1)
colnames(year19)
year19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11) %>%
slice(-1) %>% rename("...3"="명")
year19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
year19 = read_excel(paste0(pwd,year,"/",file_lst[5]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
year19 = read_excel(paste0(pwd,year,"/",file_lst[6]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
file_lst
names(year19)
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,year,"/",file_lst[month]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
for(month in 5:12){
sales_month = read_excel(paste0(pwd,year,"/",file_lst[month]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
sales19 = merge(sales19,sales_month,by="매장코드",all=TRUE)
}
dim(sales19)
year = 2019
Year = paste0("/","year,"년")
year = 2019
Year = paste0("/","year","년")
Year
Year = paste0("/",year,"년")
Year
View(sales19)
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
View(sales19)
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,year,"/",file_lst[4]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
View(sales19)
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1) %>% rename("명"="...3")
View(sales19)
read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n())
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n())
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
filter(-"합계") %>%
rename("명"="...3")
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계") %>%
rename("명"="...3")
year-2000
(year-2000)*10000
(year-2000)*10000+month*100+day()
(year-2000)*10000+4*100+30
(year-2000)*10000+12*100+5
colnames(sales19)
colnames(sales19) %>% as.numeric
colnames(sales19) %>% slice(-(1:3))
colnames(sales19)[-(1:3)]
colnames(sales19)[-(1:3)] %>% as.numeric
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
colnames(sales19)[-(1:3)] %>% as.numeric %>% apply(1,makeyear)
colnames(sales19)[-(1:3)] %>% as.numeric %>% apply(makeyear)
colnames(sales19)[-(1:3)] %>% as.numeric %>% apply(FUN=makeyear)
?apply
colnames(sales19)[-(1:3)] %>% as.numeric %>% apply(,1,FUN=makeyear)
colnames(sales19)[-(1:3)] %>% as.numeric %>% apply(1,FUN=makeyear)
apply(colnames(sales19)[-(1:3)] %>% as.numeric ,1,FUN=makeyear)
colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)
length(colnames(sales19))
colnames(sales19)[4:length(colnames(sales19))]
month =4
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
makeyear = function(month,day){
days = (year-2000)*10000+month*100+day
return(days)
}
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계") %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear(month=month))
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by="매장코드",all=TRUE)
}
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계") %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear(),month)
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by="매장코드",all=TRUE)
}
?sapply
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계") %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear())
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by="매장코드",all=TRUE)
}
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계") %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by="매장코드",all=TRUE)
}
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계") %>%
rename("명"="...3")
month =4
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계") %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by="매장코드",all=TRUE)
}
?merge
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계") %>%
rename("명"="...3")
month =4
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =4
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:3)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =4
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[4:length(colnames(sales19))] = newcolnames
newcolnames
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =4
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
View(sales19)
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by=c("매장코드","명"),all=TRUE)
}
dim(sales19)
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =4
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
print(newcolnames)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by=c("매장코드","명"),all=TRUE)
}
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[5]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =5
makeyear = function(day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
newcolnames
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =4
makeyear = function(year,month,day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear,year=year,month=month)
print(newcolnames)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by=c("매장코드","명"),all=TRUE)
}
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =4
makeyear = function(year,month,day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear,year=year,month=month)
print(newcolnames)
print("*************************")
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by=c("매장코드","명"),all=TRUE)
}
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =4
makeyear = function(year,month,day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales_month)[-(1:2)] %>% as.numeric %>% sapply(makeyear,year=year,month=month)
print(newcolnames)
print("*************************")
colnames(sales_month)[3:length(colnames(sales_month))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by=c("매장코드","명"),all=TRUE)
}
# 2019년 4월에서12월까지만 병합.
sales19 = read_excel(paste0(pwd,Year,"/",file_lst[4]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
month =4
makeyear = function(year,month,day){
days = (year-2000)*10000+month*100+day
return(days)
}
newcolnames = colnames(sales19)[-(1:2)] %>% as.numeric %>% sapply(makeyear,month=month,year=year)
colnames(sales19)[3:length(colnames(sales19))] = newcolnames
for(month in 5:12){
# 해당 월 파일 가져오기
sales_month = read_excel(paste0(pwd,Year,"/",file_lst[month]),skip=11) %>%
slice(-1,-n()) %>%
select(-"합계",-1) %>%
rename("명"="...3")
# 열이름 변경
newcolnames = colnames(sales_month)[-(1:2)] %>% as.numeric %>% sapply(makeyear,year=year,month=month)
print(newcolnames)
print("*************************")
colnames(sales_month)[3:length(colnames(sales_month))] = newcolnames
# 병합
sales19 = merge(sales19,sales_month,by=c("매장코드","명"),all=TRUE)
}
