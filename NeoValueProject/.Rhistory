val = (before_name == after_name)
if(val != TRUE){
print(i)
}
}
}
val = (before_CD == after_CD)
for(i in 1:364){
before_CD = MDCode[i,2,drop=T]
before_name = MDCode[i,3,drop=T]
after_CD = MDCode[i+1,2,drop=T]
after_name = MDCode[i+1,3,drop=T]
if(before_name == after_name){
val = (before_CD == after_CD)
if(val != TRUE){
print(i)
}
}
}
table(MDCode %>% select(SHOP_NAME))
names  = unique(MDCode %>% select(SHOP_NAME))
length(names)
names
names  = unique(MDCode %>% select(SHOP_NAME)) %>% drop()
names
names  = unique(MDCode %>% select(SHOP_NAME)) %>% pull()
names
length(names)
i
for(i in names){
MDCode %>% filter(SHOP_NAME %in% i) %>% select(SHOP_CD)
}
i
MDCode %>% filter(SHOP_NAME %in% i) %>% select(SHOP_CD)
for(i in names){
MDCode %>% filter(SHOP_NAME %in% i) %>% select(SHOP_CD) %>% print()
print("****************************")
}
MDCode %>% filter(SHOP_NAME %in% i) %>% select(SHOP_CD) %>% unique
MDCode %>% filter(SHOP_NAME %in% i) %>% select(SHOP_CD) %>% unique
MDCode %>% filter(SHOP_NAME %in% i) %>% select(SHOP_CD) %>% unique %>% length
for(i in names){
num =  MDCode %>% filter(SHOP_NAME %in% i) %>% select(SHOP_CD) %>% unique %>% length
if(num >1){
print(i)
}
}
num
num >1
num >0
for(i in names){
num =  MDCode %>% filter(SHOP_NAME %in% i) %>% select(SHOP_CD) %>% unique %>% length
if(num >1){
print(i)
}
}
# 102090
MDCode %>% filter(SHOP_CD == 102090)
MDCode %>% filter(SHOP_NAME == "앨리스마트해법수학리아잉글리쉬학원")
MDCode %>% filter(SHOP_NAME == "앨리스마트해법수학리아잉글리쉬학원") %>% select(SHOP_CD) %>% unique
MDCode %>% filter(SHOP_NAME == "앨리스마트해법수학리아잉글리쉬학원") %>% select(SHOP_CD) %>% unique %>% length
MDCode %>% filter(SHOP_NAME == "앨리스마트해법수학리아잉글리쉬학원") %>% select(SHOP_CD) %>% unique %>% pull %>% length
for(i in names){
num =  MDCode %>%
filter(SHOP_NAME %in% i) %>%
select(SHOP_CD) %>% unique %>%
pull %>%
length
if(num >1){
print(i)
}
}
#------------------------------------------------------------------#
# 회원정보(CRM.CR_CUSTOMER)
MDCustomer = read_excel("멤버십 매출.xlsx",sheet="회원정보(CRM.CR_CUSTOMER)")
head(MDCustomer)
# 여기도 정보가 있는 컬럼이 몇 개 없음
# 필요한 정보만 남김
MDCustomer = MDCustomer[-1,1:7]
colnames(MDCustomer) = c("CUST_ID","CUST_NAME","SEX_CD","BIRTH_DT","ADDR1","ADDR2","ADDR3")
head(MDCustomer)
dim(MDCustomer)
tail(MDCustomer)
dim(MDCustomer)
unique(MDCustomer$CUST_ID)
length(unique(MDCustomer$CUST_ID))
dim(MDCustomer)
length(unique(MDCustomer$CUST_ID))
table(MDCustomer$SEX_CD)
prop.table(MDCustomer$SEX_CD)
prob.table(MDCustomer$SEX_CD)
prop.table(table(MDCustomer$SEX_CD))
table(MDCustomer$SEX_CD)
prop.table(table(MDCustomer$SEX_CD)) # 성비
# 지역
table(MDCustomer$ADDR1)
prop.table(table(MDCustomer$ADDR1))
arrange(prop.table(table(MDCustomer$ADDR1)))
prop.table(order(table(MDCustomer$ADDR1)))
# 지역
table(MDCustomer$ADDR1)
tab[order(tab)]
# 지역
tab = table(MDCustomer$ADDR1)
tab[order(tab)]
tab[order(tab,decreasing = T)]
prop.table(tab[order(tab,decreasing = T)])
tab = table(MDCustomer$ADDR2)
tab[order(tab,decreasing = T)]
prop.table(tab[order(tab,decreasing = T)])
tab = table(MDCustomer$ADDR2)
tab[order(tab,decreasing = T)]
paste(MDCustomer$ADDR1,MDCustomer$ADDR2)
# 구까지 구분
ADDR12 = paste(MDCustomer$ADDR1,MDCustomer$ADDR2)
tab = table(MDCustomer$ADDR12)
tab[order(tab,decreasing = T)]
tab = table(ADDR12)
tab[order(tab,decreasing = T)]
# install.packages("data.table")
library(data.table)
library(readxl)
library(tidyverse)
library(readxl)
setwd("C:/Users/user/Seungjun/NeoValue/230616_네오밸류 데이터/230616_네오밸류 데이터(발송용)/네오밸류 데이터/02_운영데이터 등/230531_광교 데이터/후지쯔 매출내역(Open~2210)")
#------------------------------------------------------------------#
#------------------------------------------------------------------#
## 멤버십 데이터 불러오기
#------------------------------------------------------------------#
#------------------------------------------------------------------#
#------------------------------------------------------------------#
# 매장코드 sheet(3열까지만 정보가 있고 나머지는 비어있음.)
MDCode = read_excel("멤버십 매출.xlsx",sheet="매장코드(SCON002)")
#------------------------------------------------------------------#
#------------------------------------------------------------------#
## 멤버십 데이터 불러오기
#------------------------------------------------------------------#
#------------------------------------------------------------------#
setwd("C:/Users/user/Seungjun/NeoValue/230616_네오밸류 데이터/230616_네오밸류 데이터(발송용)/네오밸류 데이터/02_운영데이터 등/230531_광교 데이터/후지쯔 매출내역(Open~2210)")
#------------------------------------------------------------------#
# 매장코드 sheet(3열까지만 정보가 있고 나머지는 비어있음.)
MDCode = read_excel("멤버십 매출.xlsx",sheet="매장코드(SCON002)")
head(MDCode)
# 필요한 정보만 남김
MDCode = MDCode[-1,] %>% select(STR_CD,SHOP_CD,SHOP_NAME)
head(MDCode)
dim(MDCode) # 전체 길이 365
table(MDCode$STR_CD) # 사업장코드는 전부 같다.
length(unique(MDCode$SHOP_NAME)) # 197 생각보다 겹치는 상호가 많다.
length(unique(MDCode$SHOP_CD)) # 228
# 매장명은 같으나 매장코드가 다른 가게가 존재한다는 것을 알 수 있다.
# 해당목록들
names  = unique(MDCode %>% select(SHOP_NAME)) %>% pull()
for(i in names){
num =  MDCode %>%
filter(SHOP_NAME %in% i) %>%
select(SHOP_CD) %>% unique %>%
pull %>%
length
if(num >1){
print(i)
}
}
#------------------------------------------------------------------#
#------------------------------------------------------------------#
## 멤버십 데이터 불러오기
#------------------------------------------------------------------#
#------------------------------------------------------------------#
setwd("C:/Users/user/Seungjun/NeoValue/230616_네오밸류 데이터/230616_네오밸류 데이터(발송용)/네오밸류 데이터/02_운영데이터 등/230531_광교 데이터/후지쯔 매출내역(Open~2210)")
#------------------------------------------------------------------#
# 매장코드 sheet(3열까지만 정보가 있고 나머지는 비어있음.)
MDCode = read_excel("멤버십 매출.xlsx",sheet="매장코드(SCON002)")
head(MDCode)
# 필요한 정보만 남김
MDCode = MDCode[-1,] %>% select(STR_CD,SHOP_CD,SHOP_NAME)
head(MDCode)
dim(MDCode) # 전체 길이 365
table(MDCode$STR_CD) # 사업장코드는 전부 같다.
length(unique(MDCode$SHOP_NAME)) # 197 생각보다 겹치는 상호가 많다.
length(unique(MDCode$SHOP_CD)) # 228
# 매장명은 같으나 매장코드가 다른 가게가 존재한다는 것을 알 수 있다.
# 해당목록들
names  = unique(MDCode %>% select(SHOP_NAME)) %>% pull()
for(i in names){
num =  MDCode %>%
filter(SHOP_NAME %in% i) %>%
select(SHOP_CD) %>% unique %>%
pull %>%
length
if(num >1){
print(i)
}
}
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
MDSANL = read_excel("멤버십 매출.xlsx",sheet="일별매출속보(SANL104)")
MDSANL
MDSANL = MDSANL[-1,]
# 데이터가 정렬이 안되어 있음
MDSANL %>% arrange(SHOP_NAME)
# 데이터가 정렬이 안되어 있음
MDSANL %>% arrange(SHOP_NAME) %>% View
MDSANL = MDSANL[-1,1:17]
# 데이터가 정렬이 안되어 있음
MDSANL %>% arrange(SHOP_NAME) %>% View
summary(MDSANL)
head(MDSANL)
head(MDSANL,20)
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
MDSANL = read_excel("멤버십 매출.xlsx",sheet="일별매출속보(SANL104)",col_types=c("text","guess"))
MDSANL = MDSANL[-1,1:17]
# 데이터가 정렬이 안되어 있음
MDSANL %>% arrange(SHOP_NAME) %>% View
summary(MDSANL)
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
MDSANL = read_excel("멤버십 매출.xlsx",sheet="일별매출속보(SANL104)",col_types=c("text","numeric"))
summary(MDSANL)
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
MDSANL = read_excel("멤버십 매출.xlsx",sheet="일별매출속보(SANL104)",col_types=c("numeric"))
summary(MDSANL)
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
MDSANL = read_excel("멤버십 매출.xlsx",sheet="일별매출속보(SANL104)")
c(rep("text",4),rep("numeric",13))
MDSANL = read_excel("멤버십 매출.xlsx",sheet="일별매출속보(SANL104)",col_types=types)
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
types = c(rep("text",4),rep("numeric",13))
MDSANL = read_excel("멤버십 매출.xlsx",sheet="일별매출속보(SANL104)",col_types=types)
MDSANL = MDSANL[-1,1:17]
# 데이터가 정렬이 안되어 있음
MDSANL %>% arrange(SHOP_NAME) %>% View
summary(MDSANL)
MDSANL = read_excel("멤버십 매출.xlsx",sheet="일별매출속보(SANL104)",col_types="guess")
summary(MDSANL)
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
types = c(rep("text",4),rep("numeric",13))
MDSANL = read_excel("멤버십 매출.xlsx",range=cell_cols(1:17),sheet="일별매출속보(SANL104)",col_types=types)
summary(MDSANL)
MDSANL
# 데이터가 정렬이 안되어 있음
MDSANL = MDSANL %>% arrange(SHOP_NAME)
summary(MDSANL)
MDSANL %>% filter(!is.na())
MDSANL %>% filter(!is.na(MDSANL))
MDSANL %>% filter(!is.na(MDSANL$WEEK))
MDSANL %>% filter(is.na(MDSANL$WEEK))
MDSANL = read_excel("멤버십 매출.xlsx",range=cell_cols(1:17),sheet="일별매출속보(SANL104)",col_types=types)
MDSANL = MDSANL[-1,1:17]
# 데이터가 정렬이 안되어 있음
MDSANL = MDSANL %>% arrange(SHOP_NAME)
summary(MDSANL)
MDSANL %>% filter(is.na(MDSANL$WEEK))
MDPoint %>% select(ADD_ID)
length(unique(MDPoint %>% select(ADD_ID)))
length(unique(MDPoint %>% select(ADD_ID) %>%  pull))
length(unique(MDCustomer$CUST_ID)) # 중복되는 ID는 없음
length(unique(MDPoint %>% select(CARD_NO) %>%  pull)) # 502474
length(unique(MDPoint %>% select(ADD_ID) %>%  pull)) # 502474
length(unique(MDPoint %>% select(CARD_NO) %>%  pull)) # 502474
dim(MDPoint)
length(unique(MDPoint %>% select(ADD_ID) %>%  pull)) # 502474
length(unique(MDPoint %>% select(APPR_ID) %>%  pull)) # 17032
length(unique(MDPoint %>% select(SHOP_CD) %>%  pull)) # 502474
MDPoint$VEN_CD
MDPoint$VEN_CD
head(MDPoint$VEN_CD)
sum(!is.na(MDPoint$VEN_CD))
MDPoint = MDPoint[-1,]
dim(MDPoint)
length(unique(MDPoint %>% select(ADD_ID) %>%  pull)) # 502474
length(unique(MDPoint %>% select(CARD_NO) %>%  pull)) # 17032
length(unique(MDPoint %>% select(APPR_ID) %>%  pull)) # 502474
length(unique(MDPoint %>% select(SHOP_CD) %>%  pull)) # 123
length(unique(MDPoint %>% select(CUST_ID) %>%  pull)) # 122
sum(!is.na(MDPoint$TRADE_CD))
sum(!is.na(MDPoint$VEN_CD))
MDPoint = MDPoint %>% select(-TRADE_CD,-VEN_CD)
library(xlsx)
# install.packages("data.table")
install.packages("xlsx')
library(data.table)
library(readxl)
library(tidyverse)
library(xlsx)
#------------------------------------------------------------------#
#------------------------------------------------------------------#
## 멤버십 데이터 불러오기
#------------------------------------------------------------------#
#------------------------------------------------------------------#
setwd("C:/Users/user/Seungjun/NeoValue/230616_네오밸류 데이터/230616_네오밸류 데이터(발송용)/네오밸류 데이터/02_운영데이터 등/230531_광교 데이터/후지쯔 매출내역(Open~2210)")
library(readxl)
#------------------------------------------------------------------#
# 매장코드 sheet(3열까지만 정보가 있고 나머지는 비어있음.)
MDCode = read_excel("멤버십 매출.xlsx",sheet="매장코드(SCON002)")
head(MDCode)
# 필요한 정보만 남김
MDCode = MDCode[-1,] %>% select(STR_CD,SHOP_CD,SHOP_NAME)
head(MDCode)
dim(MDCode) # 전체 길이 365
table(MDCode$STR_CD) # 사업장코드는 전부 같다.
length(unique(MDCode$SHOP_NAME)) # 197 생각보다 겹치는 상호가 많다.
length(unique(MDCode$SHOP_CD)) # 228
# 매장명은 같으나 매장코드가 다른 가게가 존재한다는 것을 알 수 있다.
# 해당목록들
names  = unique(MDCode %>% select(SHOP_NAME)) %>% pull()
for(i in names){
num =  MDCode %>%
filter(SHOP_NAME %in% i) %>%
select(SHOP_CD) %>% unique %>%
pull %>%
length
if(num >1){
print(i)
}
}
#------------------------------------------------------------------#
# 회원정보(CRM.CR_CUSTOMER)
MDCustomer = read_excel("멤버십 매출.xlsx",sheet="회원정보(CRM.CR_CUSTOMER)")
head(MDCustomer)
# 여기도 정보가 있는 컬럼이 몇 개 없음
# 필요한 정보만 남김
MDCustomer = MDCustomer[-1,1:7]
colnames(MDCustomer) = c("CUST_ID","CUST_NAME","SEX_CD","BIRTH_DT","ADDR1","ADDR2","ADDR3")
head(MDCustomer)
dim(MDCustomer) # 25171
length(unique(MDCustomer$CUST_ID)) # 중복되는 ID는 없음
table(MDCustomer$SEX_CD)
prop.table(table(MDCustomer$SEX_CD)) # 성비
# 생일은 중요하지 않고, 나이가 중요하다고 생각
# 지역
tab = table(MDCustomer$ADDR1)
tab[order(tab,decreasing = T)]
prop.table(tab[order(tab,decreasing = T)])
# 구까지 구분
ADDR12 = paste(MDCustomer$ADDR1,MDCustomer$ADDR2)
tab = table(ADDR12)
tab[order(tab,decreasing = T)]
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
types = c(rep("text",4),rep("numeric",13))
MDSANL = read_excel("멤버십 매출.xlsx",range=cell_cols(1:17),sheet="일별매출속보(SANL104)",col_types=types)
MDSANL = MDSANL[-1,1:17]
# 데이터가 정렬이 안되어 있음
MDSANL = MDSANL %>% arrange(SHOP_NAME)
summary(MDSANL)
MDSANL %>% filter(is.na(MDSANL$WEEK))
#------------------------------------------------------------------#
# 포인트적립(CRM.CR_POINT_ADD)
MDPoint = read_excel("멤버십 매출.xlsx",sheet="포인트적립(CRM.CR_POINT_ADD)")
MDPoint = MDPoint[-1,]
dim(MDPoint)
length(unique(MDPoint %>% select(ADD_ID) %>%  pull)) # 502473
length(unique(MDPoint %>% select(CARD_NO) %>%  pull)) # 17031
length(unique(MDPoint %>% select(APPR_ID) %>%  pull)) # 502473
length(unique(MDPoint %>% select(SHOP_CD) %>%  pull)) # 122
length(unique(MDPoint %>% select(CUST_ID) %>%  pull)) # 17031
sum(!is.na(MDPoint$TRADE_CD))
sum(!is.na(MDPoint$VEN_CD))
MDPoint = MDPoint %>% select(-TRADE_CD,-VEN_CD)
#------------------------------------------------------------------#
# save
# install.packages("data.table")
install.packages("xlsx")
library(xlsx)
#------------------------------------------------------------------#
# save
library(openxlsx)
Memebership = createWorkbook("Membership")
Membership = createWorkbook("Membership")
Membership = createWorkbook("Membership")
addWorksheet(Membership,"매장코드(SCON002)")
addWorksheet(MDCustomer,"회원정보(CRM.CR_CUSTOMER)")
addWorksheet(MDSANL,"일별매출속보(SANL104)")
addWorksheet(MDPoint,"포인트적립(CRM.CR_POINT_ADD)")
Membership = createWorkbook("Membership")
addWorksheet(Membership,"매장코드(SCON002)")
addWorksheet(Membership,"회원정보(CRM.CR_CUSTOMER)")
addWorksheet(Membership,"일별매출속보(SANL104)")
addWorksheet(Membership,"포인트적립(CRM.CR_POINT_ADD)")
writeDataTable(Membership,MDCode)
writeDataTable("매장코드(SCON002)",MDCode)
writeDataTable("회원정보(CRM.CR_CUSTOMER)",MDCustomer)
writeDataTable("일별매출속보(SANL104)",MDSANL)
writeDataTable("포인트적립(CRM.CR_POINT_ADD)",MDPoint)
Membership = createWorkbook("Membership")
addWorksheet(Membership,"매장코드(SCON002)")
addWorksheet(Membership,"회원정보(CRM.CR_CUSTOMER)")
addWorksheet(Membership,"일별매출속보(SANL104)")
addWorksheet(Membership,"포인트적립(CRM.CR_POINT_ADD)")
writeDataTable("매장코드(SCON002)",MDCode)
writeDataTable(Membership,"매장코드(SCON002)",MDCode)
writeDataTable(Membership,"회원정보(CRM.CR_CUSTOMER)",MDCustomer)
writeDataTable(Membership,"일별매출속보(SANL104)",MDSANL)
writeDataTable(Membership,"포인트적립(CRM.CR_POINT_ADD)",MDPoint)
saveWorkbook(Membership,file ="Membership.xlsx")
getwd()
MDCode
# install.packages("data.table")
library(data.table)
library(readxl)
library(tidyverse)
#------------------------------------------------------------------#
#------------------------------------------------------------------#
## 멤버십 데이터 불러오기
#------------------------------------------------------------------#
#------------------------------------------------------------------#
setwd("C:/Users/user/Seungjun/NeoValue/230616_네오밸류 데이터/230616_네오밸류 데이터(발송용)/네오밸류 데이터/02_운영데이터 등/230531_광교 데이터/후지쯔 매출내역(Open~2210)")
library(readxl)
#------------------------------------------------------------------#
# 매장코드 sheet(3열까지만 정보가 있고 나머지는 비어있음.)
MDCode = read_excel("멤버십 매출.xlsx",sheet="매장코드(SCON002)")
head(MDCode)
# 필요한 정보만 남김
MDCode = MDCode[-1,] %>% select(STR_CD,SHOP_CD,SHOP_NAME)
head(MDCode)
dim(MDCode) # 전체 길이 365
table(MDCode$STR_CD) # 사업장코드는 전부 같다.
length(unique(MDCode$SHOP_NAME)) # 197 생각보다 겹치는 상호가 많다.
length(unique(MDCode$SHOP_CD)) # 228
# 매장명은 같으나 매장코드가 다른 가게가 존재한다는 것을 알 수 있다.
# 해당목록들
names  = unique(MDCode %>% select(SHOP_NAME)) %>% pull()
for(i in names){
num =  MDCode %>%
filter(SHOP_NAME %in% i) %>%
select(SHOP_CD) %>% unique %>%
pull %>%
length
if(num >1){
print(i)
}
}
#------------------------------------------------------------------#
# 회원정보(CRM.CR_CUSTOMER)
MDCustomer = read_excel("멤버십 매출.xlsx",sheet="회원정보(CRM.CR_CUSTOMER)")
head(MDCustomer)
# 여기도 정보가 있는 컬럼이 몇 개 없음
# 필요한 정보만 남김
MDCustomer = MDCustomer[-1,1:7]
colnames(MDCustomer) = c("CUST_ID","CUST_NAME","SEX_CD","BIRTH_DT","ADDR1","ADDR2","ADDR3")
head(MDCustomer)
dim(MDCustomer) # 25171
length(unique(MDCustomer$CUST_ID)) # 중복되는 ID는 없음
table(MDCustomer$SEX_CD)
prop.table(table(MDCustomer$SEX_CD)) # 성비
# 생일은 중요하지 않고, 나이가 중요하다고 생각
# 지역
tab = table(MDCustomer$ADDR1)
tab[order(tab,decreasing = T)]
prop.table(tab[order(tab,decreasing = T)])
# 구까지 구분
ADDR12 = paste(MDCustomer$ADDR1,MDCustomer$ADDR2)
tab = table(ADDR12)
tab[order(tab,decreasing = T)]
#------------------------------------------------------------------#
# 일별매출속보(SANL104)
types = c(rep("text",4),rep("numeric",13))
MDSANL = read_excel("멤버십 매출.xlsx",range=cell_cols(1:17),sheet="일별매출속보(SANL104)",col_types=types)
MDSANL = MDSANL[-1,1:17]
# 데이터가 정렬이 안되어 있음
MDSANL = MDSANL %>% arrange(SHOP_NAME)
summary(MDSANL)
MDSANL %>% filter(is.na(MDSANL$WEEK))
#------------------------------------------------------------------#
# 포인트적립(CRM.CR_POINT_ADD)
MDPoint = read_excel("멤버십 매출.xlsx",sheet="포인트적립(CRM.CR_POINT_ADD)")
MDPoint = MDPoint[-1,]
dim(MDPoint)
length(unique(MDPoint %>% select(ADD_ID) %>%  pull)) # 502473
length(unique(MDPoint %>% select(CARD_NO) %>%  pull)) # 17031
length(unique(MDPoint %>% select(APPR_ID) %>%  pull)) # 502473
length(unique(MDPoint %>% select(SHOP_CD) %>%  pull)) # 122
length(unique(MDPoint %>% select(CUST_ID) %>%  pull)) # 17031
sum(!is.na(MDPoint$TRADE_CD))
sum(!is.na(MDPoint$VEN_CD))
MDPoint = MDPoint %>% select(-TRADE_CD,-VEN_CD)
MDcode
MDCode
MDCode %>% arrange(SHOP_CD)
MDCode %>% arrange(SHOP_CD) %>% View()
MDCustomer
MDCustomer %>% select(BIRTH_DT)
a = MDCustomer %>% select(BIRTH_DT)
a[1,]
a[1,drop=T]
a[1,:,drop=T]
a[1,,drop=T]
a[1]
a[1,]
a[1,] %>% gsub("[*]","")
a[1,] %>% gsub("[*]","")
gsub("[*]","",1984071*)
gsub("[*]","","1984071*")
a[1,,drop=T] %>%  gsub("[*]","")
a[1,,drop=T]
a[1,,drop=T] %>% set_replace_all(,["*"],"")
a[1,,drop=T] %>% set_replace_all(["*"],"")
a[1,,drop=T] %>% set_replace_all("[*]","")
a[1,,drop=T] %>% str_replace_all("[*]","")
a[1,] %>% str_replace_all("[*]","")
a[1,]
a %>% str_replace_all("[*]","")
MDCustomer %>% select(BIRTH_DT)
MDCustomer %>% select(BIRTH_DT) %>% mutate(AGE = gsub(BIRTH_DT,"[*]","")) %>% select(AGE)
asdfasdfasdfasdfasdf
A = 1
A
